Step 1) Install Nginx Web Server
	$sudo apt-get update
	$sudo apt-get upgrade
	$sudo apt-get install nginx
	
Step 2) Install MySQL Server
	$sudo apt-get install mysql-server
	sudo mysql
	(Change authentication method for root MySQL user)
	mysql> use mysql;
	mysql> SELECT user, authentication_string, plugin, host FROM user;
	mysql>ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';
	mysql> FLUSH PRIVILEGES;
	mysql> exit;
	(Test new MySQL root password and authentication method)
	$mysql -u root -p
	mysql> exit
	
Step 3) Install PHP
	$sudo apt-get install php-fpm
	
Step 3) Configure SSL
1) create a self-signed key and certificate pair with OpenSSL in a single command:
	
	sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt

Fill out questions and make sure domain name matches AWS entry for server

2) create a strong Diffie-Hellman group, which is used in negotiating Perfect Forward Secrecy with clients
	
	sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
	
3) create a new Nginx configuration snippet in the /etc/nginx/snippets directory
	
	sudo vi /etc/nginx/snippets/self-signed.conf
	
	The contents of file are:
	
	ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
	ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
	
4) create another snippet that will define some SSL settings

	sudo vi /etc/nginx/snippets/ssl-params.conf
	
	The contents of file are:
	
	# from https://cipherli.st/
	# and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html

	ssl_protocols TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
	ssl_ecdh_curve secp384r1;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;
	# Disable preloading HSTS for now.  You can use the commented out header line that includes
	# the "preload" directive if you understand the implications.
	#add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
	add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	ssl_dhparam /etc/ssl/certs/dhparam.pem;

Step 4) Configure Website	
	A) Remove the current "listen 80*" directives
	B) Add the new ssl directives:
		# SSL configuration
		listen 443 ssl http2 default_server;
		listen [::]:443 ssl http2 default_server;
		include snippets/self-signed.conf;
		include snippets/ssl-params.conf;
	C) Update Server Name Directive and Index Directive
		index index.php;
		server_name AWS_FQDN;
	D) Add PHP Directive
		 location ~ \.php$ {
                root /var/www/html;
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
                fastcgi_read_timeout 300;
        }
	E) Create a new redirect server directive after the first server {} directive:
		server {
		listen 80 default_server;
		listen [::]:80 default_server;
		server_name server_domain_or_IP;
		return 302 https://$server_name$request_uri;
		}
		(Test your new SSL and redirects)
Step 5) Install phpMyAdmin
	$sudo apt-get install phpMyAdmin
	(link phpMyAdmin directory to nginx webroot)
	sudo ln -s /usr/share/phpmyadmin /var/www/html/dbadmin
